syntax = "proto3";
package tf;

import "std.proto";
import "geometry.proto";

service Tf {
    rpc GetAllFrames(std.Empty) returns (TfFrameList) {}
    rpc GetFrame(TfFrameRequest) returns (TfFrame) {}
    rpc StreamAllFrames(std.Empty) returns (stream TfFrameList) {}
    rpc StreamFrame(TfFrameRequest) returns (stream TfFrame) {}
    rpc PublishFrame(stream TfFrame) returns (std.Empty) {}
}


message TfFrameRequest {
    string frameId = 1;
    string childFrameId = 2;
}

message TfFrame {
    std.Header header = 1;
    string frameId = 2;
    string childFrameId = 3;
    geometry.Vector3 translation = 4;
    geometry.Quaternion rotation = 5;
    string address = 6;
}

message TfFrameList {
    repeated TfFrame frames = 1;
}

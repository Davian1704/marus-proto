// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rf_coms.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Loracommunication {
  public static partial class RfTransmission
  {
    static readonly string __ServiceName = "loracommunication.RfTransmission";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Loracommunication.RangeingMsg> __Marshaller_loracommunication_RangeingMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Loracommunication.RangeingMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Std.Empty> __Marshaller_std_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Std.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Loracommunication.LoraMsg> __Marshaller_loracommunication_LoraMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Loracommunication.LoraMsg.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Loracommunication.RangeingMsg, global::Std.Empty> __Method_StreamRangeingMsgs = new grpc::Method<global::Loracommunication.RangeingMsg, global::Std.Empty>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "StreamRangeingMsgs",
        __Marshaller_loracommunication_RangeingMsg,
        __Marshaller_std_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Std.Empty, global::Loracommunication.LoraMsg> __Method_ReceiveLoraMessages = new grpc::Method<global::Std.Empty, global::Loracommunication.LoraMsg>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ReceiveLoraMessages",
        __Marshaller_std_Empty,
        __Marshaller_loracommunication_LoraMsg);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Loracommunication.LoraMsg, global::Std.Empty> __Method_SendLoraMessage = new grpc::Method<global::Loracommunication.LoraMsg, global::Std.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendLoraMessage",
        __Marshaller_loracommunication_LoraMsg,
        __Marshaller_std_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Loracommunication.RfComsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of RfTransmission</summary>
    [grpc::BindServiceMethod(typeof(RfTransmission), "BindService")]
    public abstract partial class RfTransmissionBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Std.Empty> StreamRangeingMsgs(grpc::IAsyncStreamReader<global::Loracommunication.RangeingMsg> requestStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task ReceiveLoraMessages(global::Std.Empty request, grpc::IServerStreamWriter<global::Loracommunication.LoraMsg> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Std.Empty> SendLoraMessage(global::Loracommunication.LoraMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for RfTransmission</summary>
    public partial class RfTransmissionClient : grpc::ClientBase<RfTransmissionClient>
    {
      /// <summary>Creates a new client for RfTransmission</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public RfTransmissionClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for RfTransmission that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public RfTransmissionClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected RfTransmissionClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected RfTransmissionClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncClientStreamingCall<global::Loracommunication.RangeingMsg, global::Std.Empty> StreamRangeingMsgs(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StreamRangeingMsgs(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncClientStreamingCall<global::Loracommunication.RangeingMsg, global::Std.Empty> StreamRangeingMsgs(grpc::CallOptions options)
      {
        return CallInvoker.AsyncClientStreamingCall(__Method_StreamRangeingMsgs, null, options);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Loracommunication.LoraMsg> ReceiveLoraMessages(global::Std.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReceiveLoraMessages(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Loracommunication.LoraMsg> ReceiveLoraMessages(global::Std.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ReceiveLoraMessages, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Std.Empty SendLoraMessage(global::Loracommunication.LoraMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendLoraMessage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Std.Empty SendLoraMessage(global::Loracommunication.LoraMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendLoraMessage, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Std.Empty> SendLoraMessageAsync(global::Loracommunication.LoraMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendLoraMessageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Std.Empty> SendLoraMessageAsync(global::Loracommunication.LoraMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendLoraMessage, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override RfTransmissionClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new RfTransmissionClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(RfTransmissionBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_StreamRangeingMsgs, serviceImpl.StreamRangeingMsgs)
          .AddMethod(__Method_ReceiveLoraMessages, serviceImpl.ReceiveLoraMessages)
          .AddMethod(__Method_SendLoraMessage, serviceImpl.SendLoraMessage).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, RfTransmissionBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_StreamRangeingMsgs, serviceImpl == null ? null : new grpc::ClientStreamingServerMethod<global::Loracommunication.RangeingMsg, global::Std.Empty>(serviceImpl.StreamRangeingMsgs));
      serviceBinder.AddMethod(__Method_ReceiveLoraMessages, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Std.Empty, global::Loracommunication.LoraMsg>(serviceImpl.ReceiveLoraMessages));
      serviceBinder.AddMethod(__Method_SendLoraMessage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Loracommunication.LoraMsg, global::Std.Empty>(serviceImpl.SendLoraMessage));
    }

  }
}
#endregion
